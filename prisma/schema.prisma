generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id           Int                 @id @default(autoincrement())
    oidcId       String              @unique
    studentId    String              @unique
    firstNameTh  String
    middleNameTh String?
    lastNameTh   String
    firstNameEn  String
    middleNameEn String?
    lastNameEn   String
    urls         UserShortenedLink[] @relation("UserToShortenedLink")
    qrCodes      UserQrCode[]        @relation("UserToQrCodeGen")
}

model UserShortenedLink {
    id     Int    @id @default(autoincrement())
    name   String
    url    String
    slug   String @unique
    user   User   @relation(fields: [userId], references: [id], name: "UserToShortenedLink")
    userId Int
    count  Int    @default(0)

    editedAt                 DateTime                   @default(now())
    UserShortenedLinkVisited UserShortenedLinkVisited[]
}

model UserShortenedLinkVisited {
    id                 Int     @id @default(autoincrement())
    utmCampaignSource  String?
    utmCampaignMedium  String?
    utmCampaignName    String?
    utmCampaignId      String?
    utmCampaignTerm    String?
    utmCampaignContent String?

    editedAt DateTime @default(now())

    UserShortenedLink     UserShortenedLink? @relation(fields: [userShortenedLinkSlug], references: [slug])
    userShortenedLinkSlug String
}

model UserQrCode {
    id       Int      @id @default(autoincrement())
    name     String
    url      String
    qrCode   String
    color    String
    logo     String?
    editedAt DateTime @default(now())
    user     User     @relation(fields: [userId], references: [id], name: "UserToQrCodeGen")
    userId   Int
}
